# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'window_shujuguanli2.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import QMessageBox,  QGraphicsScene
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import  QPushButton, QFileDialog,  QTableWidgetItem
import os
import pandas as pd
import matplotlib
matplotlib.use('Qt5Agg')
from shared_data import SharedData
import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg
plt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签
plt.rcParams['axes.unicode_minus'] = False  # 用来正常显示负号


class shujuguanli3(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1554, 865)
        Dialog.setStyleSheet("QDialog{\n"
"    background-color:rgb(234, 242, 255)\n"
"}\n"
"\n"
"QTableWidget::item {\n"
"    background-color:rgb(238, 238, 238);\n"
"}\n"
"QTableWidget::item {\n"
"    color: transparent;\n"
"}\n"
"\n"
"\n"
"\n"
"")
        self.frame_menu = QtWidgets.QFrame(Dialog)
        self.frame_menu.setGeometry(QtCore.QRect(0, 0, 1561, 90))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_menu.sizePolicy().hasHeightForWidth())
        self.frame_menu.setSizePolicy(sizePolicy)
        self.frame_menu.setStyleSheet("QFrame{\n"
"    background-color:rgb(226, 226, 226)\n"
"}")
        self.frame_menu.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_menu.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_menu.setObjectName("frame_menu")
        self.label = QtWidgets.QLabel(self.frame_menu)
        self.label.setGeometry(QtCore.QRect(720, 30, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton_fanhui = QtWidgets.QPushButton(self.frame_menu)
        self.pushButton_fanhui.setGeometry(QtCore.QRect(60, 30, 81, 41))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        self.pushButton_fanhui.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_fanhui.setFont(font)
        self.pushButton_fanhui.setStyleSheet("QPushButton{\n"
"    border:none\n"
"}\n"
"\n"
"QPushButton::hover{\n"
"    background-color:rgb(189, 189, 189);\n"
"}\n"
"")
        self.pushButton_fanhui.setObjectName("pushButton_fanhui")
        self.frame = QtWidgets.QFrame(Dialog)
        self.frame.setGeometry(QtCore.QRect(0, 90, 1561, 771))
        self.frame.setStyleSheet("QFrame{\n"
"    background-color:rgb(203, 203, 203)\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.listWidget = QtWidgets.QListWidget(self.frame)
        self.listWidget.setGeometry(QtCore.QRect(0, 0, 501, 161))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.listWidget.setFont(font)
        self.listWidget.setObjectName("listWidget")
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        self.graphicsView = QtWidgets.QGraphicsView(self.frame)
        self.graphicsView.setGeometry(QtCore.QRect(90, 180, 1431, 571))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(203, 203, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(203, 203, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(203, 203, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(203, 203, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(203, 203, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(203, 203, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(203, 203, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(203, 203, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(203, 203, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.graphicsView.setPalette(palette)
        self.graphicsView.setStyleSheet("QgraphicsView{\n"
"    background-color:white;\n"
"}\n"
"\n"
"")
        self.graphicsView.setObjectName("graphicsView")
        self.pushButton_huitu = QtWidgets.QPushButton(self.frame)
        self.pushButton_huitu.setGeometry(QtCore.QRect(1390, 70, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pushButton_huitu.setFont(font)
        self.pushButton_huitu.setObjectName("pushButton_huitu")
        self.frame.raise_()
        self.frame_menu.raise_()

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.current_text = None

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "数据库管理"))
        self.pushButton_fanhui.setText(_translate("Dialog", "返回"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)
        item = self.listWidget.item(0)
        item.setText(_translate("Dialog", "大气舱绝压(kPaA)"))
        item = self.listWidget.item(1)
        item.setText(_translate("Dialog", "高度(m)"))
        item = self.listWidget.item(2)
        item.setText(_translate("Dialog", "座舱绝压(kPaA)"))
        item = self.listWidget.item(3)
        item.setText(_translate("Dialog", "座舱余压(kPaA)"))
        item = self.listWidget.item(4)
        item.setText(_translate("Dialog", "总流量(kg/h)"))
        item = self.listWidget.item(5)
        item.setText(_translate("Dialog", "控制腔压力(kPaA)"))
        self.listWidget.setSortingEnabled(__sortingEnabled)
        self.pushButton_huitu.setText(_translate("Dialog", "绘图"))
        self.listWidget.itemClicked.connect(self.get_currentText)
        self.pushButton_huitu.clicked.connect(self.plotData)

    def get_currentText(self, item):
        # 获取当前选中的文本并保存到变量中
        self.current_text = item.text()


    # def openAndPlot(self):
    #     # SharedData().get_file_path()
    #     #
    #     # file_name =
    #
    #     if file_name:
    #         # 读取 Excel 文件并绘制数据
    #         self.plotData(file_name)
    #

    def plotData(self):
        # 读取 数据库中选择的 Excel 文件
        if SharedData().get_file_path():
            file_path = SharedData().get_file_path()
            # print(file_path)
            try:
                df = pd.read_excel(file_path)
            except Exception as e:
                QMessageBox.warning(self, '警告', f'读取Excel文件失败：{str(e)}')
                return
            # 检查数据是否为空
            if df.empty:
                QMessageBox.warning(self, '警告', 'Excel文件中没有数据！')
                return


            if self.current_text is not None:
                QMessageBox.information(self, "选中的项", f"选中的项是: {self.current_text}")
            else:
                self.current_text = "大气舱绝压(kPaA)"


            current_text = self.current_text
            fig, ax = plt.subplots(figsize=(10, 6))
            data_x = df['时间(s)']
            data_y = df[current_text]
            ax.plot(data_x, data_y)
            ax.set_xlabel('时间(s)')
            ax.set_ylabel('{}'.format(current_text))
            ax.set_title('数据曲线')

            # 将图表嵌入到 QGraphicsView 中
            canvas = FigureCanvasQTAgg(fig)
            scene = QGraphicsScene()
            scene.addWidget(canvas)
            self.graphicsView.setScene(scene)
            self.graphicsView.show()

    #
    # # 获取当前listwidgt的选项
    # def get_currentText(self, item):
    #     # 获取当前选中的文本并保存到变量中
    #     self.current_text = item.text()




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = shujuguanli3()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())